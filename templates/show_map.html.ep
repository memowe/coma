% layout 'default';
% my $title = 'Map ' . $map->{name};
% title $title, breadcrumbs => [[Home => 'home'], $title];
<h1><%= $title %></h1>

%# map description
<hr />
<div id="description">
    %== markdown $map->{description}
</div>

%# visualization container
<hr />
<h2>Visualization</h2>
<p>Double click to view entity details!</p>
<div id="canvas"></div>

%# visualize: may the javascript begin
%= javascript begin
$(function() {
var g = new Graph();

%# add all nodes
% for my $e (@$entities) {
%   my $url = url_for 'show_entity', entity_name => $e;
    g.addNode("<%= quotemeta $e %>", {render: function(raphael, node) {
        var shape = Graph.Renderer.defaultRenderFunc(raphael, node);
        shape.dblclick(function() {
            window.location.href = '<%= $url %>';
        });
        return shape;
    }});
% }

%# add all edges
% for my $conn (values %{$map->{connections}}) {
    g.addEdge(
        "<%= quotemeta $conn->{from} %>", "<%= quotemeta $conn->{to} %>",
        {label: "<%= quotemeta $conn->{type} %>", directed: true});
% }

%# draw that shizzle
var layouter = new Graph.Layout.Spring(g);
layouter.layout();
var renderer = new Graph.Renderer.Raphael('canvas', g, 1200, 600);
renderer.draw();

});
%# end of javascript
% end

%# enter a connection form
<hr />
<h2>New connection</h2>
%= form_for 'add_connection' => (id => 'add_connection') => begin
    %= text_field from => '', id => 'from'
    &mdash;<%= text_field type => '', id => 'type' %>â†’
    %= text_field to   => '', id => 'to'
    %= submit_button 'Add connection'
% end
%= javascript begin
$(function() {
    $('#from').focus();
});
% end

%# auto-completion code
%= javascript begin
$(function() {
    $('#from, #to').autocomplete({
        source: '<%= url_for 'entity_completion' %>',
    });
    $('#type').autocomplete({
        source: '<%= url_for 'connection_completion' %>',
    });
});
% end

%# entity cloud
<hr />
<h2>Entity cloud</h2>
%= include 'entity_cloud'

<hr />
<h2>Entities</h2>
%= include 'entity_list'

%# dump connections
<hr />
<h2>Connections</h2>
<ol id="connections">
% my @sorted_conn = sort {
%   $a->{from} cmp $b->{from} or $a->{to} cmp $b->{to}
% } values %{$map->{connections}};
% for my $conn (@sorted_conn) {
    <li>
    %= form_for delete_connection => (class => 'delete_connection') => begin
        %= hidden_field connection_id => $conn->{id}
        %= link_to show_entity => {entity_name => $conn->{from}} => begin
            <strong><%= $conn->{from} %></strong>
        % end
        %= $conn->{type}
        %= link_to show_entity => {entity_name => $conn->{to}} => begin
            <strong><%= $conn->{to} %></strong>
        % end
        %= submit_button 'x'
    % end
    </li>
% }
</ol>

%# edit map data
<hr />
<h2>Edit map data</h2>
%= form_for edit_map => (id => 'edit_map') => begin
    <table>
        <tr><th><%= label_for name => 'name' %></th><td>
            %= text_field name => (id => 'name', value => $map->{name})
        </td></tr>
        <tr><th><%= label_for description => 'description' %></th><td>
            <%= text_area description => (rows => 3, cols => 60) => begin %><%= $map->{description} =%><% end %>
        </td></tr>
    </table>
    %= submit_button 'Edit'
% end

%# tgf export
<hr />
<h2>TGF export</h2>
%= form_for tgf_export => (id => 'tgf_export') => begin
    %= submit_button 'Download'
%= end

%# delete this map?
<hr />
<h2>Delete this map</h2>
%= form_for delete_map => (id => 'delete_map') => begin
    %= submit_button 'Do it'
% end
